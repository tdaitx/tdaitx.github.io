<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Desktop streaming | WAITWUT?!?]]></title>
  <link href="http://www.waitwut.info/blog/categories/desktop-streaming/atom.xml" rel="self"/>
  <link href="http://www.waitwut.info/"/>
  <updated>2013-06-07T22:29:31-03:00</updated>
  <id>http://www.waitwut.info/</id>
  <author>
    <name><![CDATA[Tiago Stürmer Daitx]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Desktop streaming with VLC]]></title>
    <link href="http://www.waitwut.info/blog/2013/06/07/desktop-streaming-with-vlc/"/>
    <updated>2013-06-07T17:45:00-03:00</updated>
    <id>http://www.waitwut.info/blog/2013/06/07/desktop-streaming-with-vlc</id>
    <content type="html"><![CDATA[<p>Stream your desktop with VLC using the command line.</p>

<h2>tl;dr</h2>

<p>On the server side execute the following for a HTTP streaming using x264 with no audio:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cvlc screen:// --screen-fps=5 --live-caching=100 --sout "#transcode{venc=x264{tune=zerolatency,qp=10,nr=1000},vcodec=x264,vb=100,fps=5,acodec=none}:std{access=http,mux=ts,dst=/stream}"</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>On the client side watch the stream using:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vlc http://&lt;host>:8080/stream</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Motivation</h2>

<p>While investigating ways to share my desktop for remote presentations I found out that VLC is able to stream my desktop. I figured out that it might be a good alternative to read-only VNC sessions for some settings and got into testing it in my local network. I also did a simple comparison of it against <a href="http://www.karlrunge.com/x11vnc/" title="x11vnc a VNC server for real X displays">x11vnc</a>.</p>

<p>Now, some VLC setup.</p>

<h2>VLC client setup</h2>

<p>Remember to properly configure the client cache. The actual value will depend on the network: a smaller cache leads to lower delays but clients might stagger; a bigger cache will help solving staggering problems but video delays will get higher. I recommend you test it beforehand with the slowest client in the network.</p>

<p>Using a VLC client with 100 ms of cache I got ~3 seconds delay (using UDP) or ~5 seconds (using HTTP) on the desktop output in a private lan. Good enough for most presentations.</p>

<p><strong>Note on FPS:</strong> VLC seems to be picky about low frames per second (fps); go as low as 5, but not lower; latency got much worse when I did that. Keep in mind that higher fps rates usually means higher bandwidth needs and certainly much higher CPU usage. I found 5 fps to be good just enough.</p>

<h2>VLC server codecs</h2>

<p>I tested 4 video codecs: x264, mp4v, mp2v, and mp1v.</p>

<h3>x264</h3>

<p>On a static screen, x264 gave me the lowest bandwidth, using around 30 kbit/s, but it also got over 2.5 mbit/s with fast motion content - eg. playing a video. As expected, CPU usage is also higher than any other encoder. Latency can be kept as low as 3 seconds for UDP and 5 seconds for HTTP by using "tune=zerolatency". Without zerolatency x264 encoding quality gets much better, but I experienced delays around 10~20 seconds.</p>

<h3>mp4v, mp2v, and mp1v</h3>

<p>Bandwidth for static screen:</p>

<p> <strong>mp4v:</strong> 1 mbit/s ❘ <strong>mp2v:</strong> 512 kbit/s ❘ <strong>mp1v:</strong> 64 kbit/s</p>

<p>Fast motion like video demands a much higher bandwidth: 4~5 mbit/s using the settings bellow.</p>

<h2>Server side x264 examples</h2>

<p>HTTP streaming, x264, no audio
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cvlc screen:// --screen-fps=5 --live-caching=100 --sout "#transcode{venc=x264{tune=zerolatency,qp=10,nr=1000},vcodec=x264,vb=100,fps=5,acodec=none}:std{access=http,mux=ts,dst=/stream}"</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>HTTP streaming, mp4v, no audio
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cvlc screen:// --screen-fps=5 --sout "#transcode{vcodec=mp4v,vb=64,fps=5,acodec=none}:std{access=http,mux=ts,dst=/stream}"</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>UDP streaming, with audio (please do set a proper destination and port)
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cvlc screen:// --screen-fps=5 --input-slave=pulse:// --sout "#transcode{vcodec=mp4v,acodec=mp3,vb=64,ab=32,fps=5,audio-sync}:std{access=udp,mux=ts,dst=192.168.0.1:2345}"</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>See more streaming and codec options on the <a href="https://www.videolan.org/doc/streaming-howto/en/ch03.html" title="VLC - Chapter 3: Advanced streaming using the command line">VLC streaming howto</a> and <a href="http://wiki.videolan.org/Codec" title="VLC codecs list">VLC codecs wiki page</a>.</p>

<h2>Watching the stream</h2>

<p>Watch a HTTP stream
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vlc http://&lt;host>:8080/stream</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Watch a UDP stream
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vlc udp://@:2345</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Audio means higher latency</h2>

<p>Unless you can live with a higher latency, it is highly recommended to disable audio. The same 3 second delay was way over 10 seconds with audio enabled - all other settings equal. Only enable it if you can live with the higher latency that it introduces.</p>

<h2>Comparison with VNC</h2>

<p>I did a very simple comparison using the default <a href="http://www.karlrunge.com/x11vnc/" title="x11vnc a VNC server for real X displays">x11vnc</a> settings and <a href="http://remmina.sourceforge.net" title="Remmina VNC client">Remmina</a>.</p>

<p><strong>Latency:</strong>
VNC session latency was in the order of milliseconds while VLC was on the order of seconds</p>

<p><strong>Bandwidth:</strong>
VNC used as much as 32 mbit/s for bandwidth in high content settings and around 30 kbits/s on static content. VLC streaming never got past 5 mbit/s (remember it was constrained to 5 fps), but static content might take 1 mbit/s or more depending on the codec - there's the option to use UDP multicast if the network allows for it.</p>

<p><strong>Content quality:</strong>
VNC has the highest quality. VLC quality is highly dependent on the coded, from the highest quality to lowest: x264, mp4v, mp2v, and mp1v.</p>

<p><strong>CPU usage:</strong>
VNC kept CPU usage to a minimum. VLC depends on the selected codec, with x264 being the most demanding even when restrained to 5 fps.</p>

<p><strong>Authentication:</strong>
VNC allows for password and/or certificate authentication. VLC streaming provides no authentication.</p>

<p><strong>Encryption:</strong>
VNC allows connection encryption and VLC allows <a href="https://www.videolan.org/doc/streaming-howto/en/ch03.html" title="VLC - Chapter 3: Advanced streaming using the command line">streaming over HTTPS</a>.</p>

<h2>Conclusion</h2>

<p>It seems that it is feasible to rely on VLC streaming for presentations under some settings. Latency seems to be the biggest issue, so be sure that your audience and presentation can handle delays as high as 20 seconds.</p>

<p>Using HTTP also enables any browser (with the proper plugin) to access the presentation as well. VNC also supports browser, either using the java plugin (I find that a hassle) or a HTML5 client such as <a href="http://kanaka.github.io/noVNC/%E2%80%8E" title="HTML5 VNC Client">noVNC</a> (requires server support or a WebSocket proxy).</p>

<p>Remember that VNC can use better compression algorithms and both server and client can limit the color depth to limit bandwidth usage. This means each client can be configured in a way to make better use of the available network - of course, the server must be able to support the client settings.</p>

<p>Those tests were all run in a private network. I intent to do some testing over slower networks to compare both quality and reliability of VNC sharing VS VLC streamming, keep posted.</p>

<hr />

<h4>References</h4>

<p>I first found about desktop streaming using VLC in <a href="http://blog.nostdal.org/2012/10/vlc-h264-desktop-and-audio-recording-or.html" title="VLC H264 desktop and audio recording or streaming via HTTP on Linux">lnostdal's blog</a>. From there I learned about the various streaming options in the <a href="https://www.videolan.org/doc/streaming-howto/en/ch03.html" title="VLC - Chapter 3: Advanced streaming using the command line">VLC streaming howto</a>. The <a href="https://www.videolan.org/streaming-features.html" title="Streaming features list: video, audio, muxing, transport">VLC streaming features</a> described both available and valid combinations of video, audio, muxing type, and transport method. Codec names and a simple transcoding example are described at <a href="http://wiki.videolan.org/Codec" title="VLC codecs list">VLC codecs wiki page</a>. I found everything I needed about the x264 codec options at the <a href="http://mewiki.project357.com/wiki/X264_Settings" title="a comprehensive guide to options in x264">x264 settings wiki page</a>.</p>

<p><a href="https://plus.google.com/109931565080058432516/posts/hrUGwzJ6UNt">My original post on Google+</a> and a nice guide for <a href="http://grok.lsu.edu/article.aspx?articleid=14625">desktop streaming using VLC GUI wizard</a> posted not long ago.</p>
]]></content>
  </entry>
  
</feed>
